
/*
 * Copyright (c) 2020 NetFoundry. All rights reserved.
 */

plugins {
    id('com.android.application')
    id('kotlin-android')
    id('kotlin-kapt')
    id('kotlin-android-extensions')
}

version = parent.version

def vc = versionCode

android {
    signingConfigs {
        release {
            keyAlias 'ziti1'
            keyPassword System.getenv('RELEASE_KEYSTORE_PASSWORD')
            storeFile file(System.getenv('RELEASE_KEYSTORE') ?: "not found")
            storePassword System.getenv('RELEASE_KEYSTORE_PASSWORD')
        }
    }
    compileSdkVersion 30
    ndkVersion "22.1.7171670"

    defaultConfig {
        applicationId "org.openziti.mobile"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode vc
        versionName "${project.version}"

        buildConfigField "String", "GIT_COMMIT", "\"${gitHash}\""
        buildConfigField "String", "GIT_BRANCH", "\"${gitBranch}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

repositories {
    mavenLocal()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation("org.openziti:ziti-android:${versions.ziti}@aar") {
        transitive = true
    }

    implementation("com.noveogroup.android:android-logger:1.3.6")

    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:${versions.coroutines}")


    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'

    implementation 'com.journeyapps:zxing-android-embedded:4.1.0'

    implementation('org.pcap4j:pcap4j-core:1.8.2'){
        transitive = false
        exclude(group: 'net.java.dev.jna', module: 'jna')
    }
    implementation('org.pcap4j:pcap4j-packetfactory-static:1.8.2') {
        exclude(group: 'net.java.dev.jna', module: 'jna')
    }

    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    testImplementation 'org.hamcrest:hamcrest-core:2.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
